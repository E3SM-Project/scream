#!/bin/tcsh -f 
#
#  Held-Suzrez job "reference" submission script  (Mark Taylor 2008)
#  updated to CMAKE, 2015
#  updated to theta-l dycore, 2021
#
#  directories
#        $HOMME        homme root directory 
#        $wdir         run and data output directory
#
#  files 
#       explicit26.nl.sed   namelist template used by this script
#                           to construct "input.nl" read by HOMME
#
#  this script will build the code and run a short NE=15 test on Anvil
#
#
#
#
#SBATCH --job-name HS
#SBATCH -p acme-medium
#SBATCH --account=condo
#SBATCH -N 30
#SBATCH --time=1:00:00


set nlev=26
set ndays = 1200
set nmax =  5       # no. of timesteps.  ignored, unless ndays=0
set rfreq = 1600   # no. of days, or n. of timesteps if ndays=0

# use TensorHV order3 scalings, for all resolutions:
set nu = 4.5e-8


# 0 = normal, 1=restart
set runtype = 0 

set ne = 30
set NPTS = 4
set qsize = 0         # number of tracers
set topo = ''         # default no topography
set toponame = ''
if ( $ne == 8 ) then
   # 3.75 degree     
   set tstep = 900
endif
if ( $ne == 15 ) then
   # 2 degree  anvil 38 nodes, 1600 days: 5min 
   set tstep = 600
endif
if ( $ne == 30 ) then
   # 1 degree    
   set tstep = 300       # dynamics timestep
   #set topo = '/home/ccsm-data/inputdata/atm/cam/topo/USGS-gtopo30_ne30np4_16xdel2-PFC-consistentSGH.nc'
   #set topo = '/lcrc/group/acme/ac.mtaylor/topodata/ne30/USGS-gtopo30_ne30np4_16xdel2-nolim.nc'
   set topo = '/lcrc/group/acme/ac.mtaylor/topodata/ne30/USGS-gtopo30_ne30np4pg2_fx2t.nc'
   set toponame = fx2t
endif
if ( $ne == 120 ) then
   # 0.25 degree 
   set tstep = 75        # dynamics timestep   
endif


# number of hours between calls to prim_printstate
set sfreq = 6
@ sfreq *= 3600
@ sfreq /= $tstep

if ( $ndays == 0 ) then
  set sfreq = $nmax
endif


set HOMME = ~/codes/acme/components/homme
set wdir = ~/scratch1/preqx

set MACH = $HOMME/cmake/machineFiles/anvil.cmake
set input = $HOMME/test/held_suarez0
set bld = $wdir/bld
#set exe = preqx
set exe = theta-l

set name = hs${toponame}-$exe-ne${ne}-nu${nu}
echo $name

mkdir -p $bld
cd $bld
# rm $bld/CMakeCache.txt    # remove this file to force re-configure
if (! -f CMakeCache.txt) then
   echo "running CMAKE to configure the model"

   cmake -C $MACH -DQSIZE_D=$qsize -DPREQX_PLEV=$nlev -DPREQX_NP=4  \
   -DBUILD_HOMME_SWDGX=FALSE                     \
   -DBUILD_HOMME_SWEQX=FALSE                     \
   -DBUILD_HOMME_PRIMDGX=FALSE                   \
   -DPREQX_USE_ENERGY=TRUE  $HOMME
   if ($status) exit
   make -j4 clean
endif
#if (! -f $bld/src/$exe/$exe ) then
   make -j4 $exe
   if ($status) exit
#endif


# setup the work directory
mkdir $wdir/vcoord
cp -f $HOMME/test/vcoord/*.ascii $wdir/vcoord


set wdir = $wdir/$name
mkdir $wdir
mkdir $wdir/movies
mkdir $wdir/restart
#use a restart file from a different simulation
#ln -fs $wdir/../restart-ne30L26-8x $wdir/restart



set rname = R0001
if ( 1 == $runtype ) then
   cd $wdir/restart
   set rname = `ls -t R*[0-9] | head -1 `
   echo $rname
endif

if ( 0 == $ndays ) then
   set RUNLEN = "nmax = $nmax"
   echo RUNNING $nmax timesteps
else
   set RUNLEN = "ndays = $ndays"
   echo RUNNING $ndays DAYS
endif

cd $input
rm -f $wdir/input.nl
sed s/NE/$ne/ explicit${nlev}.nl.sed | sed s/TSTEP/$tstep/ | sed s/SFREQ/$sfreq/ |\
sed s/R0001/$rname/ | sed s/RUNTYPE/$runtype/ |\
sed s/NU1/$nu/ |\
sed s:infilenames.\*:"infilenames = '$topo'": |\
sed s/\ndays.\*/"$RUNLEN"/ |\
sed s/restartfreq.\*/"restartfreq = $rfreq"/ |\
sed s/\qsize.\*/"qsize = $qsize"/ > $wdir/input.nl


cd $wdir


cat  $wdir/input.nl


############################################################
# run the code
############################################################
date
set echo
srun -K -c 1 -N $SLURM_NNODES   $bld/src/$exe/$exe < $wdir/input.nl 
date

# save timing data
mv HommeTime HommeTime.$$

############################################################
# extract average cost per timestep, for benchmark results
############################################################
unset echo
# extract prim_run time 
if ( $ndays > 0 ) then
   # user specified days, not nmax
   @ nmax = $ndays * 24 * 3600  / $tstep
endif 

set rtime = `head -100 HommeTime.$$ | grep prim_run | head -1 | awk '{print $7}' - `
#set time_per_timestep = `echo "scale=8;$rtime / $nmax" | bc`
set time_per_timestep = `python -c "print($rtime / $nmax)" `
echo "time for $nmax timesteps = $rtime seconds"


# compute SYPD:  
# number of timesteps per year:  360*24*3600/tstep
# timesteps per second:           (1/$time_per_timestep)
# years per second:     :  (1/$time_per_timestep) /  (360*24*3600/tstep)
#                          $tstep / ( $time_per_timestep 360*24*3600 )
# cost per day:            $tstep / ( $time_per_timestep 360 )
#set SYPD = `echo "scale=8; $tstep / ( $time_per_timestep * 360 )" | bc `
set SYPD = `python -c "print($tstep / ( $time_per_timestep * 360 ))" `
echo "NODES=$SLURM_NNODES SYPD = $SYPD"


# run NCL:
ncl ~/codes/acme/components/homme/test/held_suarez0/mapave.ncl
#~/climoplot.sh hsmapave.nc
echo done
