Start testing: Oct 25 17:22 MDT
----------------------------------------------------------
5/95 Testing: grid_ut_np2_omp1
5/95 Test: grid_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./grid"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"grid_ut_np2_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 16 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
Starting catch session on rank 1 out of 2
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

None
None
<end of output>
Test time =  11.23 sec
----------------------------------------------------------
Test Passed.
"grid_ut_np2_omp1" end time: Oct 25 17:23 MDT
"grid_ut_np2_omp1" time elapsed: 00:00:11
----------------------------------------------------------

27/95 Testing: physics_tests_ut_np1_omp1
27/95 Test: physics_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 1 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 1259785085
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 571637627
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =  11.39 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

1/95 Testing: utils_ut_np1_omp1
1/95 Test: utils_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./utils"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"utils_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./utils
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 12 ./utils 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (57 assertions in 2 test cases)

None
<end of output>
Test time =  11.38 sec
----------------------------------------------------------
Test Passed.
"utils_ut_np1_omp1" end time: Oct 25 17:23 MDT
"utils_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

2/95 Testing: column_ops_ut_np1_omp1
2/95 Test: column_ops_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./column_ops"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"column_ops_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./column_ops
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 13 ./column_ops 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
num_levs: 32
num_levs: 33
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (817 assertions in 3 test cases)

None
<end of output>
Test time =  11.40 sec
----------------------------------------------------------
Test Passed.
"column_ops_ut_np1_omp1" end time: Oct 25 17:23 MDT
"column_ops_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

3/95 Testing: field_ut_np1_omp1
3/95 Test: field_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./field"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"field_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./field
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14 ./field 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test field, random number generator seed: 227549575
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 3887257796
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 2125797851
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 2019716451
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 1206152831
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 1550861895
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field, random number generator seed: 1784288422
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test tracers_bundle, random number generator seed: 3934703795
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 1188308230
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 1846951159
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 669625466
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 2933659527
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 2313846791
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test field_property_check, random number generator seed: 1771523346
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (843 assertions in 8 test cases)

None
<end of output>
Test time =  11.43 sec
----------------------------------------------------------
Test Passed.
"field_ut_np1_omp1" end time: Oct 25 17:23 MDT
"field_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

4/95 Testing: grid_ut_np1_omp1
4/95 Test: grid_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./grid"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"grid_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 15 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

None
<end of output>
Test time =  11.46 sec
----------------------------------------------------------
Test Passed.
"grid_ut_np1_omp1" end time: Oct 25 17:23 MDT
"grid_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

6/95 Testing: grid_ut_np3_omp1
6/95 Test: grid_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./grid"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"grid_ut_np3_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 2 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 19 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 18 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
Starting catch session on rank 1 out of 3
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

Starting catch session on rank 2 out of 3
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

None
None
None
<end of output>
Test time =  11.48 sec
----------------------------------------------------------
Test Passed.
"grid_ut_np3_omp1" end time: Oct 25 17:23 MDT
"grid_ut_np3_omp1" time elapsed: 00:00:11
----------------------------------------------------------

7/95 Testing: grid_ut_np4_omp1
7/95 Test: grid_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./grid"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"grid_ut_np4_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 22 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 23 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
execname: ./grid
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 20 ./grid 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
Starting catch session on rank 3 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

Starting catch session on rank 1 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

Starting catch session on rank 2 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (273 assertions in 2 test cases)

None
None
None
None
<end of output>
Test time =  11.52 sec
----------------------------------------------------------
Test Passed.
"grid_ut_np4_omp1" end time: Oct 25 17:23 MDT
"grid_ut_np4_omp1" time elapsed: 00:00:11
----------------------------------------------------------

8/95 Testing: common_physics_ut_np1_omp1
8/95 Test: common_physics_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./common_physics"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"common_physics_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./common_physics
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 24 ./common_physics 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test common_physics_functions_test, random number generator seed: 1725856681
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 -> Number of randomized runs: 5

 -> Testing Real scalar type...ok!
 -> Testing Pack<Real,16> scalar type...ok!

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (9990 assertions in 1 test case)

None
<end of output>
Test time =  11.59 sec
----------------------------------------------------------
Test Passed.
"common_physics_ut_np1_omp1" end time: Oct 25 17:23 MDT
"common_physics_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

9/95 Testing: atm_proc_ut_np1_omp1
9/95 Test: atm_proc_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./atm_proc"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
"atm_proc_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./atm_proc
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 25 ./atm_proc 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (11 assertions in 2 test cases)

None
<end of output>
Test time =  11.66 sec
----------------------------------------------------------
Test Passed.
"atm_proc_ut_np1_omp1" end time: Oct 25 17:23 MDT
"atm_proc_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

63/95 Testing: rrtmgp_unit_tests_ut_np1_omp1
63/95 Test: rrtmgp_unit_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./rrtmgp_unit_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests
"rrtmgp_unit_tests_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./rrtmgp_unit_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 8 ./rrtmgp_unit_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
Create Pool
Memory high water mark: 4 KB
Destroy Pool
Create Pool
Memory high water mark: 4 KB
Destroy Pool
Create Pool
Memory high water mark: 2 KB
Destroy Pool
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (24 assertions in 4 test cases)

None
<end of output>
Test time =  11.65 sec
----------------------------------------------------------
Test Passed.
"rrtmgp_unit_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"rrtmgp_unit_tests_ut_np1_omp1" time elapsed: 00:00:11
----------------------------------------------------------

22/95 Testing: homme_pd_remap_ut_np4_omp1
22/95 Test: homme_pd_remap_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./homme_pd_remap"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"homme_pd_remap_ut_np4_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 43 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 42 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 41 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 40 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 1 out of 4
Starting catch session on rank 2 out of 4
Starting catch session on rank 3 out of 4
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
 For test remap, random number generator seed: 2350816401
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           4           4
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            3           1           1          16
           4          80           2          90
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  forward
 -> Remap  backward
 For test combo_remap, random number generator seed: 136689805
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           4           4
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            3           1           1          16
           4          80           2          90
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999999999999989
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  phys->dyn->pys
 -> Remap  dyn->phys->dyn
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (169068 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (171384 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (192228 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (164436 assertions in 2 test cases)

None
None
None
None
<end of output>
Test time =  11.69 sec
----------------------------------------------------------
Test Passed.
"homme_pd_remap_ut_np4_omp1" end time: Oct 25 17:23 MDT
"homme_pd_remap_ut_np4_omp1" time elapsed: 00:00:11
----------------------------------------------------------

21/95 Testing: homme_pd_remap_ut_np3_omp1
21/95 Test: homme_pd_remap_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./homme_pd_remap"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"homme_pd_remap_ut_np3_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 4 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 39 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 38 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 1 out of 3
Starting catch session on rank 2 out of 3
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
 For test remap, random number generator seed: 850222557
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           3           3
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          31
           3         123
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  forward
 -> Remap  backward
 For test combo_remap, random number generator seed: 1923659471
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           3           3
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          31
           3         123
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999999999999989
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  phys->dyn->pys
 -> Remap  dyn->phys->dyn
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (217704 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (225810 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (253602 assertions in 2 test cases)

None
None
None
<end of output>
Test time =  11.80 sec
----------------------------------------------------------
Test Passed.
"homme_pd_remap_ut_np3_omp1" end time: Oct 25 17:23 MDT
"homme_pd_remap_ut_np3_omp1" time elapsed: 00:00:11
----------------------------------------------------------

20/95 Testing: homme_pd_remap_ut_np2_omp1
20/95 Test: homme_pd_remap_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./homme_pd_remap"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"homme_pd_remap_ut_np2_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 37 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 36 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 1 out of 2
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
 For test remap, random number generator seed: 1684633464
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           2           2
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          61
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  forward
 -> Remap  backward
 For test combo_remap, random number generator seed: 735924807
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           2           2
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          61
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999999999999989
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  phys->dyn->pys
 -> Remap  dyn->phys->dyn
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (356664 assertions in 2 test cases)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (340452 assertions in 2 test cases)

None
None
<end of output>
Test time =  11.94 sec
----------------------------------------------------------
Test Passed.
"homme_pd_remap_ut_np2_omp1" end time: Oct 25 17:23 MDT
"homme_pd_remap_ut_np2_omp1" time elapsed: 00:00:11
----------------------------------------------------------

25/95 Testing: dyn_grid_io_ut_np3_omp1
25/95 Test: dyn_grid_io_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./dyn_grid_io"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"dyn_grid_io_ut_np3_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 6 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 5 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 47 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 1 out of 3
Starting catch session on rank 2 out of 3
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
 number of MPI processes per node: min,max=           3           3
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          31
           3         123
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 For test dyn_grid_io, random number generator seed: 3856043576
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

None
None
None
<end of output>
Test time =  12.25 sec
----------------------------------------------------------
Test Passed.
"dyn_grid_io_ut_np3_omp1" end time: Oct 25 17:23 MDT
"dyn_grid_io_ut_np3_omp1" time elapsed: 00:00:12
----------------------------------------------------------

23/95 Testing: dyn_grid_io_ut_np1_omp1
23/95 Test: dyn_grid_io_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./dyn_grid_io"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"dyn_grid_io_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 44 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 number of MPI processes per node: min,max=           1           1
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            1           1
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 For test dyn_grid_io, random number generator seed: 2532960926
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

None
<end of output>
Test time =  12.27 sec
----------------------------------------------------------
Test Passed.
"dyn_grid_io_ut_np1_omp1" end time: Oct 25 17:23 MDT
"dyn_grid_io_ut_np1_omp1" time elapsed: 00:00:12
----------------------------------------------------------

24/95 Testing: dyn_grid_io_ut_np2_omp1
24/95 Test: dyn_grid_io_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./dyn_grid_io"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"dyn_grid_io_ut_np2_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 46 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 45 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 1 out of 2
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
 number of MPI processes per node: min,max=           2           2
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            2           1           1          61
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 For test dyn_grid_io, random number generator seed: 1470751574
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

None
None
<end of output>
Test time =  12.31 sec
----------------------------------------------------------
Test Passed.
"dyn_grid_io_ut_np2_omp1" end time: Oct 25 17:23 MDT
"dyn_grid_io_ut_np2_omp1" time elapsed: 00:00:12
----------------------------------------------------------

19/95 Testing: homme_pd_remap_ut_np1_omp1
19/95 Test: homme_pd_remap_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./homme_pd_remap"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"homme_pd_remap_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./homme_pd_remap
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 35 ./homme_pd_remap 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test remap, random number generator seed: 1720796972
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           1           1
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            1           1
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  forward
 -> Remap  backward
 For test combo_remap, random number generator seed: 3674252145
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 number of MPI processes per node: min,max=           1           1
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            1           1
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999999999999989
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 -> Remap  phys->dyn->pys
 -> Remap  dyn->phys->dyn
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (697116 assertions in 2 test cases)

None
<end of output>
Test time =  12.65 sec
----------------------------------------------------------
Test Passed.
"homme_pd_remap_ut_np1_omp1" end time: Oct 25 17:23 MDT
"homme_pd_remap_ut_np1_omp1" time elapsed: 00:00:12
----------------------------------------------------------

86/95 Testing: ad_ut_ut_np1_omp1
86/95 Test: ad_ut_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./ad_ut"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/control/tests
"ad_ut_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./ad_ut
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 16 ./ad_ut 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/control/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (9 assertions in 1 test case)

None
<end of output>
Test time =   1.88 sec
----------------------------------------------------------
Test Passed.
"ad_ut_ut_np1_omp1" end time: Oct 25 17:23 MDT
"ad_ut_ut_np1_omp1" time elapsed: 00:00:01
----------------------------------------------------------

14/95 Testing: restart_test_ut_np1_omp1
14/95 Test: restart_test_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./restart_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"restart_test_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
seed: 3155131503 (catch rng seed was 0)
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

None
<end of output>
Test time =  15.21 sec
----------------------------------------------------------
Test Passed.
"restart_test_ut_np1_omp1" end time: Oct 25 17:23 MDT
"restart_test_ut_np1_omp1" time elapsed: 00:00:15
----------------------------------------------------------

82/95 Testing: spa_tests_ut_np1_omp1
82/95 Test: spa_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./spa_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
"spa_tests_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 9 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (5904 assertions in 1 test case)

None
<end of output>
Test time =  15.32 sec
----------------------------------------------------------
Test Passed.
"spa_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"spa_tests_ut_np1_omp1" time elapsed: 00:00:15
----------------------------------------------------------

29/95 Testing: physics_tests_ut_np1_omp3
29/95 Test: physics_tests_ut_np1_omp3
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=3 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp3" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 40,41,42 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 3688528940
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 655039705
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   5.08 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp3" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp3" time elapsed: 00:00:05
----------------------------------------------------------

30/95 Testing: physics_tests_ut_np1_omp4
30/95 Test: physics_tests_ut_np1_omp4
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=4 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp4" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 38,39,4,43 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 602272621
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 3124765532
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   5.12 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp4" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp4" time elapsed: 00:00:05
----------------------------------------------------------

31/95 Testing: physics_tests_ut_np1_omp5
31/95 Test: physics_tests_ut_np1_omp5
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=5 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp5" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 36,37,47,5,6 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 408928508
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 2603646231
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   4.79 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp5" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp5" time elapsed: 00:00:04
----------------------------------------------------------

32/95 Testing: physics_tests_ut_np1_omp6
32/95 Test: physics_tests_ut_np1_omp6
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=6 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp6" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 16,35,44,45,46,8 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 2637685220
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 2789332072
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   3.97 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp6" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp6" time elapsed: 00:00:03
----------------------------------------------------------

87/95 Testing: sc_ut_ut_np1_omp1
87/95 Test: sc_ut_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./sc_ut"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/control/tests
"sc_ut_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./sc_ut
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17 ./sc_ut 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/control/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test surface_coupling, random number generator seed: 2675602500
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test recreate_mct_coupling, random number generator seed: 3566124941
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test do_initial_export, random number generator seed: 3228695208
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2120 assertions in 3 test cases)

None
<end of output>
Test time =   5.92 sec
----------------------------------------------------------
Test Passed.
"sc_ut_ut_np1_omp1" end time: Oct 25 17:23 MDT
"sc_ut_ut_np1_omp1" time elapsed: 00:00:05
----------------------------------------------------------

91/95 Testing: cld_fraction_standalone_ut_np1_omp1
91/95 Test: cld_fraction_standalone_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./cld_fraction_standalone"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/cld_fraction
"cld_fraction_standalone_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./cld_fraction_standalone
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14 ./cld_fraction_standalone 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/cld_fraction
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
Start time stepping loop...       [  0%]
  - Iteration   1 completed       [  4%]
  - Iteration   2 completed       [  8%]
  - Iteration   3 completed       [ 12%]
  - Iteration   4 completed       [ 16%]
  - Iteration   5 completed       [ 20%]
  - Iteration   6 completed       [ 25%]
  - Iteration   7 completed       [ 29%]
  - Iteration   8 completed       [ 33%]
  - Iteration   9 completed       [ 37%]
  - Iteration  10 completed       [ 41%]
  - Iteration  11 completed       [ 45%]
  - Iteration  12 completed       [ 50%]
  - Iteration  13 completed       [ 54%]
  - Iteration  14 completed       [ 58%]
  - Iteration  15 completed       [ 62%]
  - Iteration  16 completed       [ 66%]
  - Iteration  17 completed       [ 70%]
  - Iteration  18 completed       [ 75%]
  - Iteration  19 completed       [ 79%]
  - Iteration  20 completed       [ 83%]
  - Iteration  21 completed       [ 87%]
  - Iteration  22 completed       [ 91%]
  - Iteration  23 completed       [ 95%]
  - Iteration  24 completed       [100%]
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2305 assertions in 1 test case)

None
<end of output>
Test time =   5.88 sec
----------------------------------------------------------
Test Passed.
"cld_fraction_standalone_ut_np1_omp1" end time: Oct 25 17:23 MDT
"cld_fraction_standalone_ut_np1_omp1" time elapsed: 00:00:05
----------------------------------------------------------

28/95 Testing: physics_tests_ut_np1_omp2
28/95 Test: physics_tests_ut_np1_omp2
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=2 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp2" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 18,19 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 3780547420
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 3694483780
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   6.19 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp2" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp2" time elapsed: 00:00:06
----------------------------------------------------------

26/95 Testing: dyn_grid_io_ut_np4_omp1
26/95 Test: dyn_grid_io_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./dyn_grid_io"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
"dyn_grid_io_ut_np4_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 22 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 23 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
execname: ./dyn_grid_io
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 20 ./dyn_grid_io 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/dynamics/homme/tests
Starting catch session on rank 3 out of 4
Starting catch session on rank 2 out of 4
Starting catch session on rank 1 out of 4
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
 number of MPI processes per node: min,max=           4           4
 Initializing dynamics grid...
 total number of elements nelem =           24
 getMetaSchedule: tmpP:            3           1           1          16
           4          80           2          90
 prim_init1: total threads: nthreads =            0
 threads across elements    hthreads =            1
 threading within elements  vthreads =            1
 init shared boundary_exchange buffers
 initializing elements...
 running mass_matrix
 re-initializing elements: alpha area correction= 0.99999703100322057
 re-running mass_matrix
 running global_dof
 INFO: Non-scalable action: Computing global coords in SE dycore.
 INFO: Non-scalable action: Computing global area in SE dycore.
 For test dyn_grid_io, random number generator seed: 3877625954
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (3 assertions in 1 test case)

None
None
None
None
<end of output>
Test time =   6.25 sec
----------------------------------------------------------
Test Passed.
"dyn_grid_io_ut_np4_omp1" end time: Oct 25 17:23 MDT
"dyn_grid_io_ut_np4_omp1" time elapsed: 00:00:06
----------------------------------------------------------

64/95 Testing: shoc_tests_ut_np1_omp1
64/95 Test: shoc_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 11 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 1816090295
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 4266247690
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 439808542
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 277827853
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 365983988
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 2317231933
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 2088618850
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 750621040
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 2650117862
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 1034872238
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 1510053515
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 4139302204
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 434773965
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 1238735270
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 1671736844
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 1594662780
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 1784569323
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 940685542
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 1682581923
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 967066090
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 2026659750
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 2412910062
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 2518383952
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 4112803956
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 3346145742
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 3391385687
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 1881662177
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 4006158514
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 3856936845
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 2928168776
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3354322479
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 126544458
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 1126085242
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 1429686611
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 1030259026
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 2695097347
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 1837519114
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 2394753639
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 1963471204
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 1744640504
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =  17.93 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp1" time elapsed: 00:00:17
----------------------------------------------------------

34/95 Testing: physics_tests_ut_np1_omp8
34/95 Test: physics_tests_ut_np1_omp8
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=8 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp8" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 16,35,44,45,46,47,5,6 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 1282048603
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 451463314
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.25 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp8" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp8" time elapsed: 00:00:01
----------------------------------------------------------

33/95 Testing: physics_tests_ut_np1_omp7
33/95 Test: physics_tests_ut_np1_omp7
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=7 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp7" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 36,37,38,39,4,42,43 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 2249290922
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 1398813825
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.36 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp7" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp7" time elapsed: 00:00:01
----------------------------------------------------------

35/95 Testing: physics_tests_ut_np1_omp9
35/95 Test: physics_tests_ut_np1_omp9
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=9 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp9" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14,17,18,19,20,21,22,23,8 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 3589266633
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 3713372996
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp9" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp9" time elapsed: 00:00:01
----------------------------------------------------------

36/95 Testing: physics_tests_ut_np1_omp10
36/95 Test: physics_tests_ut_np1_omp10
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=10 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp10" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14,17,18,19,20,21,22,23,42,43 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 1210788832
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 2884453630
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.27 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp10" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp10" time elapsed: 00:00:01
----------------------------------------------------------

15/95 Testing: restart_test_ut_np2_omp1
15/95 Test: restart_test_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./restart_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"restart_test_ut_np2_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 9 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
Starting catch session on rank 1 out of 2
seed: 830228572 (catch rng seed was 0)
seed: 2505276532 (catch rng seed was 0)
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

None
None
<end of output>
Test time =   5.71 sec
----------------------------------------------------------
Test Passed.
"restart_test_ut_np2_omp1" end time: Oct 25 17:23 MDT
"restart_test_ut_np2_omp1" time elapsed: 00:00:05
----------------------------------------------------------

37/95 Testing: physics_tests_ut_np1_omp11
37/95 Test: physics_tests_ut_np1_omp11
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=11 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp11" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14,17,18,19,20,21,22,23,42,43,8 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 3753947137
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 4232986707
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp11" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp11" time elapsed: 00:00:01
----------------------------------------------------------

83/95 Testing: spa_tests_ut_np2_omp1
83/95 Test: spa_tests_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./spa_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
"spa_tests_ut_np2_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 41 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 40 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
Starting catch session on rank 1 out of 2
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2952 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2952 assertions in 1 test case)

None
None
<end of output>
Test time =   5.58 sec
----------------------------------------------------------
Test Passed.
"spa_tests_ut_np2_omp1" end time: Oct 25 17:23 MDT
"spa_tests_ut_np2_omp1" time elapsed: 00:00:05
----------------------------------------------------------

10/95 Testing: io_test_ut_np1_omp1
10/95 Test: io_test_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./io_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"io_test_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 26 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

None
<end of output>
Test time =  23.93 sec
----------------------------------------------------------
Test Passed.
"io_test_ut_np1_omp1" end time: Oct 25 17:23 MDT
"io_test_ut_np1_omp1" time elapsed: 00:00:23
----------------------------------------------------------

11/95 Testing: io_test_ut_np2_omp1
11/95 Test: io_test_ut_np2_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:2:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./io_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"io_test_ut_np2_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 28 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 27 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
Starting catch session on rank 1 out of 2
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 2
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

None
None
<end of output>
Test time =  24.49 sec
----------------------------------------------------------
Test Passed.
"io_test_ut_np2_omp1" end time: Oct 25 17:23 MDT
"io_test_ut_np2_omp1" time elapsed: 00:00:24
----------------------------------------------------------

12/95 Testing: io_test_ut_np3_omp1
12/95 Test: io_test_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./io_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"io_test_ut_np3_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 30 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 3 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 29 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
Starting catch session on rank 1 out of 3
Starting catch session on rank 2 out of 3
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

None
None
None
<end of output>
Test time =  24.94 sec
----------------------------------------------------------
Test Passed.
"io_test_ut_np3_omp1" end time: Oct 25 17:23 MDT
"io_test_ut_np3_omp1" time elapsed: 00:00:24
----------------------------------------------------------

66/95 Testing: shoc_tests_ut_np1_omp3
66/95 Test: shoc_tests_ut_np1_omp3
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=3 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp3" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 35,44,45 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 84790962
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 3015914270
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 2134666547
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 3988119174
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 2747977705
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1715616166
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 632179720
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 493002529
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 2440240045
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 1194730011
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 3160276548
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 3763261861
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 2133989124
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 545137826
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 1378611138
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 770193809
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 717445676
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 786347151
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 1819481112
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 4232292114
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 216288465
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 3566190367
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 1504228403
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 3996308151
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 1854575207
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 243749298
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 2861824862
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 1712608438
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 3840106562
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 1810169691
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 2405084927
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3300447479
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 3507557384
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 542617410
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 1109049772
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 461727046
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 4232865652
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 745153106
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 675907937
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 3480261358
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.63 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp3" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp3" time elapsed: 00:00:06
----------------------------------------------------------

13/95 Testing: io_test_ut_np4_omp1
13/95 Test: io_test_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./io_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"io_test_ut_np4_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 33 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 32 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 34 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./io_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 31 ./io_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
Starting catch session on rank 3 out of 4
Starting catch session on rank 2 out of 4
Starting catch session on rank 1 out of 4
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (222 assertions in 1 test case)

None
None
None
None
<end of output>
Test time =  25.22 sec
----------------------------------------------------------
Test Passed.
"io_test_ut_np4_omp1" end time: Oct 25 17:23 MDT
"io_test_ut_np4_omp1" time elapsed: 00:00:25
----------------------------------------------------------

67/95 Testing: shoc_tests_ut_np1_omp4
67/95 Test: shoc_tests_ut_np1_omp4
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=4 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp4" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 46,47,5,6 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2616424724
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 2358886398
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 70645279
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 1231234015
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 2010553440
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 868797051
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 1324828030
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 1167094053
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 988921338
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 1816492998
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 1919829437
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 3189622249
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 3057134291
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 2044170422
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 2741473403
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 3270793336
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 3615023001
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 1275402677
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 869940134
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 3286716931
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 2343520103
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 2122415797
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 1985548166
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 3551777248
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 3062536362
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 2018383350
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 2148196043
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 2034904855
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 1535107012
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 3026052736
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 2315829320
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3464192571
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2199504716
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 3532546146
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 3027419401
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 4014985213
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 528344849
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 3101674834
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 2533083740
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 248301148
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.95 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp4" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp4" time elapsed: 00:00:06
----------------------------------------------------------

65/95 Testing: shoc_tests_ut_np1_omp2
65/95 Test: shoc_tests_ut_np1_omp2
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=2 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp2" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 11,16 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2957640726
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 3295590181
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1865881452
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 3097973284
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 3423975356
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 3843415887
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 2234661500
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 561534334
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 511074250
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 2584684067
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2505799551
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 4169616098
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 2627879506
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 810134001
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 2831448995
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 3923835264
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 1447585158
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 3950587754
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 2446844045
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 496451249
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 227254511
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 2916250270
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 3346582735
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2078041857
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 467763123
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 3580089336
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 1876521585
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 4074718214
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 287320586
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 2655921120
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 4177266781
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 133625382
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 4114301632
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 65347405
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 285487141
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 671082646
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 2924790682
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 1768875082
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 374017668
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 1680875017
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   7.34 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp2" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp2" time elapsed: 00:00:07
----------------------------------------------------------

16/95 Testing: restart_test_ut_np3_omp1
16/95 Test: restart_test_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./restart_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"restart_test_ut_np3_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
seed: 3985304053 (catch rng seed was 0)
Starting catch session on rank 1 out of 3
seed: 766486142 (catch rng seed was 0)
Starting catch session on rank 2 out of 3
seed: 1834010272 (catch rng seed was 0)
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

None
None
None
<end of output>
Test time =   4.69 sec
----------------------------------------------------------
Test Passed.
"restart_test_ut_np3_omp1" end time: Oct 25 17:23 MDT
"restart_test_ut_np3_omp1" time elapsed: 00:00:04
----------------------------------------------------------

68/95 Testing: shoc_tests_ut_np1_omp5
68/95 Test: shoc_tests_ut_np1_omp5
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=5 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp5" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 36,37,38,39,4 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2380517836
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 1958853515
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 3700484121
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 824339876
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 2271831191
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 521769281
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 1546230175
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 3117144476
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 3912868177
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 1837201624
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 1279195406
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 2640811034
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 2693045661
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 1813220466
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 268610999
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 26722809
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 3745336530
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 2911758602
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 1496990763
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 3203894151
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 3359946761
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 1912845291
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 2748054079
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 1900618172
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 1386649916
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 2495081051
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 7798185
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 3676448520
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 2722774066
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 2669731572
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 886718705
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3775176665
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 3006527830
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 4076317753
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 3808434239
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1258249893
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 1597101424
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 3025805783
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 1339721152
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2399722568
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   8.01 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp5" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp5" time elapsed: 00:00:08
----------------------------------------------------------

84/95 Testing: spa_tests_ut_np3_omp1
84/95 Test: spa_tests_ut_np3_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:3:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./spa_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
"spa_tests_ut_np3_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 41 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 42 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 40 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
Starting catch session on rank 2 out of 3
Starting catch session on rank 1 out of 3
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 3
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1968 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1968 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1968 assertions in 1 test case)

None
None
None
<end of output>
Test time =   5.09 sec
----------------------------------------------------------
Test Passed.
"spa_tests_ut_np3_omp1" end time: Oct 25 17:23 MDT
"spa_tests_ut_np3_omp1" time elapsed: 00:00:05
----------------------------------------------------------

69/95 Testing: shoc_tests_ut_np1_omp6
69/95 Test: shoc_tests_ut_np1_omp6
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=6 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp6" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 18,19,20,21,22,23 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2502840867
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 2651884557
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1491946110
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 3988933510
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 314558007
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1854041462
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 1103392483
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 4072242401
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 66206486
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 3707289446
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2603357541
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 1010047232
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 3399552204
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 2374264524
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 3668415663
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 327898587
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 1990564426
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 2362754229
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 939621882
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 2106018671
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 2644411268
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 72618853
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 4235172595
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2289100789
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 245425210
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 50128157
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 517599583
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 927248272
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 76274188
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 4011500487
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3953705304
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 1180007204
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2732226780
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 337896094
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 1866521004
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1681184834
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 442454596
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 850747289
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 3110601456
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2398055928
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.34 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp6" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp6" time elapsed: 00:00:06
----------------------------------------------------------

62/95 Testing: rrtmgp_tests_ut_np1_omp1
62/95 Test: rrtmgp_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./rrtmgp_tests -i /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests/data/rrtmgp-allsky.nc -b /home/asdonah/sandbox_1/scream/components/scream/ctest-build/baselines/full_debug/data/rrtmgp-allsky-baseline.nc"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests
"rrtmgp_tests_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./rrtmgp_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 7 ./rrtmgp_tests -i /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests/data/rrtmgp-allsky.nc -b /home/asdonah/sandbox_1/scream/components/scream/ctest-build/baselines/full_debug/data/rrtmgp-allsky-baseline.nc
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/rrtmgp/tests
Initialize yakl...
Create Pool
Read fluxes...
Read dummy atmos...
Initialize RRTMGP...
Setup dummy atmos...
Setup fluxes...
Run RRTMGP...
Check values...
Memory high water mark: 200.011 MB
Destroy Pool
None
<end of output>
Test time =  29.32 sec
----------------------------------------------------------
Test Passed.
"rrtmgp_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"rrtmgp_tests_ut_np1_omp1" time elapsed: 00:00:29
----------------------------------------------------------

17/95 Testing: restart_test_ut_np4_omp1
17/95 Test: restart_test_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./restart_test"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"restart_test_ut_np4_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 11 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 14 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
execname: ./restart_test
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 16 ./restart_test 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
Starting catch session on rank 1 out of 4
Starting catch session on rank 2 out of 4
Starting catch session on rank 3 out of 4
seed: 1476811147 (catch rng seed was 0)
seed: 3759608949 (catch rng seed was 0)
seed: 3855281803 (catch rng seed was 0)
seed: 2439620998 (catch rng seed was 0)
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (7 assertions in 1 test case)

None
None
None
None
<end of output>
Test time =   4.62 sec
----------------------------------------------------------
Test Passed.
"restart_test_ut_np4_omp1" end time: Oct 25 17:23 MDT
"restart_test_ut_np4_omp1" time elapsed: 00:00:04
----------------------------------------------------------

43/95 Testing: p3_test_setup_ut_np1_omp1
43/95 Test: p3_test_setup_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_test_setup"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_test_setup_ut_np1_omp1" start time: Oct 25 17:22 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_test_setup
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 10 ./p3_test_setup 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
Generating p3 rain tables...
None
<end of output>
Test time =  31.12 sec
----------------------------------------------------------
Test Passed.
"p3_test_setup_ut_np1_omp1" end time: Oct 25 17:23 MDT
"p3_test_setup_ut_np1_omp1" time elapsed: 00:00:31
----------------------------------------------------------

18/95 Testing: io_test_restart_check
18/95 Test: io_test_restart_check
Command: "/home/projects/x86-64/cmake/3.19.3/bin/cmake" "-P" "CmpNcdumpOutput.cmake"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/share/io/tests
"io_test_restart_check" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
Restart test PASSED.
<end of output>
Test time =   0.51 sec
----------------------------------------------------------
Test Passed.
"io_test_restart_check" end time: Oct 25 17:23 MDT
"io_test_restart_check" time elapsed: 00:00:00
----------------------------------------------------------

71/95 Testing: shoc_tests_ut_np1_omp8
71/95 Test: shoc_tests_ut_np1_omp8
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=8 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp8" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 31,32,33,34,35,44,45,8 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 3976083937
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 3835429527
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 3023515813
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 3188085508
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 2216388316
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 56193264
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 246418477
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 1378344016
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 1044762492
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 953050697
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2603779399
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 2949360967
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 2692694135
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 3756268627
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 3808897439
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 537328425
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 3905670202
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 103638804
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 3781611838
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 918476613
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 1967488632
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 3206414931
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 1619742227
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 4209340995
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 7152058
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 1219760340
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 3456757691
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 2633171071
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 1392840622
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 2017773126
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 1218935619
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3388821027
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 928660279
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 2948335668
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 145248050
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 3832862108
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 3139328091
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 1250875735
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 2758824004
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2157567562
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.20 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp8" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp8" time elapsed: 00:00:06
----------------------------------------------------------

70/95 Testing: shoc_tests_ut_np1_omp7
70/95 Test: shoc_tests_ut_np1_omp7
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=7 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp7" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 26,27,28,29,3,30,43 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 3954063313
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 1507755730
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 397532169
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 4114512412
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 2828560192
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1490673199
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 1435045348
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 3176119589
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 4043633923
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 4011279452
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2785371949
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 1580813271
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 3701146297
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 2112488147
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 1300013511
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 3945755946
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 526799354
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 143130135
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 2548398178
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 2026880664
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 964119738
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 2297127645
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 3768761630
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 3854156409
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 1014154274
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 3511949493
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 1533254115
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 2860343172
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 3414073744
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 3930700581
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 1368514940
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3856784993
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 218567291
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 1996055515
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 2099087873
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 2213157130
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 3159239060
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 54677568
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 2336155016
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2884445073
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.87 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp7" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp7" time elapsed: 00:00:06
----------------------------------------------------------

85/95 Testing: spa_tests_ut_np4_omp1
85/95 Test: spa_tests_ut_np4_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:4:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./spa_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
"spa_tests_ut_np4_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 41 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 42 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 6 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
execname: ./spa_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 40 ./spa_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/spa/tests
Starting catch session on rank 3 out of 4
Starting catch session on rank 1 out of 4
Starting catch session on rank 2 out of 4
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 4
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1476 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1476 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1476 assertions in 1 test case)

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (1476 assertions in 1 test case)

None
None
None
None
<end of output>
Test time =   4.60 sec
----------------------------------------------------------
Test Passed.
"spa_tests_ut_np4_omp1" end time: Oct 25 17:23 MDT
"spa_tests_ut_np4_omp1" time elapsed: 00:00:04
----------------------------------------------------------

72/95 Testing: shoc_tests_ut_np1_omp9
72/95 Test: shoc_tests_ut_np1_omp9
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=9 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp9" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17,36,37,38,39,4,46,47,5 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2031763640
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 3182786675
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1889780737
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 2931552799
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 906960718
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 2190848399
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 2625718037
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 1960720722
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 2942620551
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 2811275823
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2932156967
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 243179325
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 257694176
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 1631284568
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 1193671322
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 176545616
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 2598904639
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 2564944817
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 3582914582
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 3883169376
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 2763857436
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 2637454096
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 3844877239
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2815849978
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 4253405141
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 918640840
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 1187460459
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 24370163
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 2325190744
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 3108608503
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3361600020
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 1927672815
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2298163967
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 3724645813
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 201938274
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1606244695
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 1683975955
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 3193609484
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 516178303
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2373675678
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.70 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp9" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp9" time elapsed: 00:00:06
----------------------------------------------------------

93/95 Testing: rrtmgp_standalone_ut_np1_omp1
93/95 Test: rrtmgp_standalone_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./rrtmgp_standalone --ekat-test-params rrtmgp_inputfile=/home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/rrtmgp/data/rrtmgp-allsky.nc,rrtmgp_baseline=/home/asdonah/sandbox_1/scream/components/scream/ctest-build/baselines/full_debug/data/rrtmgp-allsky-baseline.nc"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/rrtmgp
"rrtmgp_standalone_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./rrtmgp_standalone
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 2 ./rrtmgp_standalone --ekat-test-params rrtmgp_inputfile=/home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/rrtmgp/data/rrtmgp-allsky.nc,rrtmgp_baseline=/home/asdonah/sandbox_1/scream/components/scream/ctest-build/baselines/full_debug/data/rrtmgp-allsky-baseline.nc
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/rrtmgp
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
Create Pool
Memory high water mark: 201.011 MB
Destroy Pool
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (11 assertions in 1 test case)

None
<end of output>
Test time =  21.77 sec
----------------------------------------------------------
Test Passed.
"rrtmgp_standalone_ut_np1_omp1" end time: Oct 25 17:23 MDT
"rrtmgp_standalone_ut_np1_omp1" time elapsed: 00:00:21
----------------------------------------------------------

73/95 Testing: shoc_tests_ut_np1_omp10
73/95 Test: shoc_tests_ut_np1_omp10
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=10 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp10" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,20,21,22,23 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 3314749099
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 752792653
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 2351639310
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 2171613155
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 4227571311
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 66937385
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 3987586056
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 1036880098
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 4045357188
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 3949185228
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 3882056119
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 624048037
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 1299321557
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 539421727
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 3219191924
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 3524268103
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 4156720101
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 2053555925
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 2382275383
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 2998021836
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 1903614490
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 4242317349
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 3708858154
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 1004460556
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 82010401
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 3382776781
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 2332241133
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 1539795361
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 824000387
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 370208526
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 1691039732
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 2537938713
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 3077300914
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 3307711523
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 3740632731
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 673562237
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 1563847629
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 2139984618
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 1111511572
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 595938416
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.20 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp10" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp10" time elapsed: 00:00:06
----------------------------------------------------------

38/95 Testing: physics_tests_ut_np1_omp12
38/95 Test: physics_tests_ut_np1_omp12
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=12 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp12" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,2,20,21,22,23,47 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 840078079
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 3480345789
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   0.97 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp12" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp12" time elapsed: 00:00:00
----------------------------------------------------------

39/95 Testing: physics_tests_ut_np1_omp13
39/95 Test: physics_tests_ut_np1_omp13
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=13 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp13" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,2,20,21,22,23,47,5 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 521656523
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 1974678557
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   0.99 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp13" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp13" time elapsed: 00:00:00
----------------------------------------------------------

40/95 Testing: physics_tests_ut_np1_omp14
40/95 Test: physics_tests_ut_np1_omp14
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=14 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp14" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,2,20,21,22,23,47,5,8 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 14


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 14

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 3925262207
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 778303914
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   0.99 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp14" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp14" time elapsed: 00:00:00
----------------------------------------------------------

47/95 Testing: p3_tests_ut_np1_omp4
47/95 Test: p3_tests_ut_np1_omp4
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=4 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp4" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 34,35,44,45 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 4

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 3614476209
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 3245914875
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 3631619428
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 1560922413
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1131371977
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1152988838
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 455718366
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 4123500115
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 2993446335
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 632324006
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3384352869
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 4260537121
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 4291466703
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1521444386
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 3749696283
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 3184836368
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 2736037750
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 862951168
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  12.31 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp4" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp4" time elapsed: 00:00:12
----------------------------------------------------------

49/95 Testing: p3_tests_ut_np1_omp6
49/95 Test: p3_tests_ut_np1_omp6
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=6 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp6" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 30,40,41,42,43,6 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 6

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 623363614
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 1626053282
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 646584019
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 3371781573
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1375817064
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1569876508
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 1712608711
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 2463948608
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 2959315135
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1075006204
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3455437447
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 783850513
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 490998651
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1766432474
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2504403018
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 1435783123
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 3770998043
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 4093098122
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  13.84 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp6" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp6" time elapsed: 00:00:13
----------------------------------------------------------

48/95 Testing: p3_tests_ut_np1_omp5
48/95 Test: p3_tests_ut_np1_omp5
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=5 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp5" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 26,27,28,29,3 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 5

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 3422207874
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 656258098
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 2629992863
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 947316663
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1675283337
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1255168558
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 2149026596
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 2582189517
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 821264050
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1673498523
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 198901104
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3088990724
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1085527292
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 2127754568
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2369416714
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 3148677576
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 22987736
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 2447910285
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  14.35 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp5" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp5" time elapsed: 00:00:14
----------------------------------------------------------

50/95 Testing: p3_tests_ut_np1_omp7
50/95 Test: p3_tests_ut_np1_omp7
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=7 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp7" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17,36,37,38,39,4,46 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 7

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 2504202488
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 275332365
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 1419535375
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 3491767045
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 3224675439
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2623875194
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 4226587213
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 1673407547
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 359302195
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 178910219
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3038791424
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 670814547
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3188154088
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 3860112416
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2552628323
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 2874592832
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 2977255158
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 1361464573
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  13.44 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp7" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp7" time elapsed: 00:00:13
----------------------------------------------------------

46/95 Testing: p3_tests_ut_np1_omp3
46/95 Test: p3_tests_ut_np1_omp3
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=3 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp3" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 31,32,33 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 3

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 2957837927
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 3658350017
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 1622115739
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 1666660499
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2045961686
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2783813592
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 4257075860
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 70196381
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 661448273
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 653978609
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 955521332
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3331097554
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 304764368
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1111402896
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2234680919
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 3647420661
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 385455107
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 1665762333
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  17.93 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp3" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp3" time elapsed: 00:00:17
----------------------------------------------------------

45/95 Testing: p3_tests_ut_np1_omp2
45/95 Test: p3_tests_ut_np1_omp2
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=2 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp2" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 7,9 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 2

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 472274862
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 3060447179
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 582238544
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 3232768787
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1400748353
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 634127153
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 3341793711
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 267386914
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 702093118
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2298726629
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 601251235
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2585743400
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 936734433
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1923031436
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 1859141624
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 420576367
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 2993046373
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 3216378870
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  18.44 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp2" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp2" time elapsed: 00:00:18
----------------------------------------------------------

51/95 Testing: p3_tests_ut_np1_omp8
51/95 Test: p3_tests_ut_np1_omp8
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=8 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp8" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,2,20 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 8

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 584561514
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 1810675022
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 166843160
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 4165250504
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2921035133
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1308483264
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 3489330443
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 2335238366
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 564530123
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 4263862389
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2703585279
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2089305557
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1910552207
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 714038333
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 3112834539
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 435344062
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 200434661
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 381020020
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  11.44 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp8" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp8" time elapsed: 00:00:11
----------------------------------------------------------

90/95 Testing: shoc_standalone_ut_np1_omp1
90/95 Test: shoc_standalone_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_standalone"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/shoc
"shoc_standalone_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_standalone
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 13 ./shoc_standalone 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/uncoupled/shoc
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
Start time stepping loop...       [  0%]
  - Iteration   1 completed       [  4%]
  - Iteration   2 completed       [  8%]
  - Iteration   3 completed       [ 12%]
  - Iteration   4 completed       [ 16%]
  - Iteration   5 completed       [ 20%]
  - Iteration   6 completed       [ 25%]
  - Iteration   7 completed       [ 29%]
  - Iteration   8 completed       [ 33%]
  - Iteration   9 completed       [ 37%]
  - Iteration  10 completed       [ 41%]
  - Iteration  11 completed       [ 45%]
  - Iteration  12 completed       [ 50%]
  - Iteration  13 completed       [ 54%]
  - Iteration  14 completed       [ 58%]
  - Iteration  15 completed       [ 62%]
  - Iteration  16 completed       [ 66%]
  - Iteration  17 completed       [ 70%]
  - Iteration  18 completed       [ 75%]
  - Iteration  19 completed       [ 79%]
  - Iteration  20 completed       [ 83%]
  - Iteration  21 completed       [ 87%]
  - Iteration  22 completed       [ 91%]
  - Iteration  23 completed       [ 95%]
  - Iteration  24 completed       [100%]
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2 assertions in 1 test case)

None
<end of output>
Test time =  45.37 sec
----------------------------------------------------------
Test Passed.
"shoc_standalone_ut_np1_omp1" end time: Oct 25 17:23 MDT
"shoc_standalone_ut_np1_omp1" time elapsed: 00:00:45
----------------------------------------------------------

74/95 Testing: shoc_tests_ut_np1_omp11
74/95 Test: shoc_tests_ut_np1_omp11
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=11 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp11" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,14,16,18,19,2,20,7,8,9 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 3354273873
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 811130518
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1867965961
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 1697886257
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 156743583
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1002512961
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 2405158931
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 2143938771
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 3368345857
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 2758402155
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 3328368990
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 3245897148
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 2654705894
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 2055366576
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 4267886659
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 214074898
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 3262637689
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 3619034156
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 760626297
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 1486514207
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 184892135
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 398752614
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 441648988
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 3089458067
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 655968422
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 451283886
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 2072768650
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 3821605091
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 1490477871
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 1195818772
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3560648050
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 2880640519
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2890847701
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 4045009731
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 1515960523
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1027028416
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 1211702298
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 583018244
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 808748217
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2368565378
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   5.76 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp11" end time: Oct 25 17:23 MDT
"shoc_tests_ut_np1_omp11" time elapsed: 00:00:05
----------------------------------------------------------

52/95 Testing: p3_tests_ut_np1_omp9
52/95 Test: p3_tests_ut_np1_omp9
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=9 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp9" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,34,35,44,45,47,5 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 9

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 1660483948
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 3834306816
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 3035695451
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 1663847939
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1372012484
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 4243452924
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 1052484460
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 2660663810
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 3260310900
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1629350875
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3529466999
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2053038249
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2683541766
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 3826421047
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 3191134437
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 769763110
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 1027991693
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 1979011490
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  15.54 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp9" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp9" time elapsed: 00:00:15
----------------------------------------------------------

53/95 Testing: p3_tests_ut_np1_omp10
53/95 Test: p3_tests_ut_np1_omp10
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=10 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp10" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 26,27,28,29,3,30,40,41,42,43 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 10

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 3995901328
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 1503249111
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 1014161019
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 2641480365
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1506745064
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 43550124
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 1264301077
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 910468239
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 938388446
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2221516663
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2834969542
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 4253479244
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2860801058
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1619287949
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2293314721
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 4004144322
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 3391300628
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 826153710
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  14.25 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp10" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp10" time elapsed: 00:00:14
----------------------------------------------------------

41/95 Testing: physics_tests_ut_np1_omp15
41/95 Test: physics_tests_ut_np1_omp15
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=15 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp15" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40,41,42,43 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 15


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 15

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 1971710914
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 2561328259
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp15" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp15" time elapsed: 00:00:01
----------------------------------------------------------

42/95 Testing: physics_tests_ut_np1_omp16
42/95 Test: physics_tests_ut_np1_omp16
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=16 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./physics_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
"physics_tests_ut_np1_omp16" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./physics_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40,41,42,43,44 ./physics_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/share/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 16


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 16

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test physics_test_data, random number generator seed: 1784276332
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test physics_test_data, random number generator seed: 1557081801
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (35348 assertions in 2 test cases)

None
<end of output>
Test time =   0.99 sec
----------------------------------------------------------
Test Passed.
"physics_tests_ut_np1_omp16" end time: Oct 25 17:23 MDT
"physics_tests_ut_np1_omp16" time elapsed: 00:00:00
----------------------------------------------------------

44/95 Testing: p3_tests_ut_np1_omp1
44/95 Test: p3_tests_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 10 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 1682954042
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 1588127799
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 2740317429
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 4017008256
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1845070605
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 3663997355
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 2557005397
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 602167675
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 2669651486
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1083640373
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1624864006
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1610858039
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2678777487
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1904486390
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 2764538438
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 4272623756
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 3364185786
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 3745500559
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  31.50 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp1" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp1" time elapsed: 00:00:31
----------------------------------------------------------

54/95 Testing: p3_tests_ut_np1_omp11
54/95 Test: p3_tests_ut_np1_omp11
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=11 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp11" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 17,31,32,33,36,37,38,39,4,46,6 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 11

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 679300359
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 3845336097
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 1316543279
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 3217489475
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2000556834
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 2349576044
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 3653832279
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 3036527382
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 94620398
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1803043998
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2727051281
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2686146105
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1766864889
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1175727265
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 1123017053
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 1785961488
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 4025692746
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 95338425
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  13.73 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp11" end time: Oct 25 17:23 MDT
"p3_tests_ut_np1_omp11" time elapsed: 00:00:13
----------------------------------------------------------

55/95 Testing: p3_tests_ut_np1_omp12
55/95 Test: p3_tests_ut_np1_omp12
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=12 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp12" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 0,11,13,14,16,18,19,2,20,7,8,9 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 2302178519
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 1837348415
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 650194468
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 2032691482
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1717713793
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 547229763
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 996681181
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 511384789
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 3237357919
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 1762680698
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 411794529
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3813697584
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 532022472
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1967575473
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 1463163831
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 1132169979
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 1955444122
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 555084310
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  12.92 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp12" end time: Oct 25 17:24 MDT
"p3_tests_ut_np1_omp12" time elapsed: 00:00:12
----------------------------------------------------------

56/95 Testing: p3_tests_ut_np1_omp13
56/95 Test: p3_tests_ut_np1_omp13
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=13 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./p3_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
"p3_tests_ut_np1_omp13" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./p3_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40,41 ./p3_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/p3/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test p3_back_to_cell_average, random number generator seed: 2995410144
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_upwind, random number generator seed: 2322083256
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_gen_sed, random number generator seed: 176549242
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_cloud_sed, random number generator seed: 1966319922
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 92334233
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_ice_sed, random number generator seed: 1191398954
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_rain_sed, random number generator seed: 1438151027
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_calc_liq_relaxation_timescale, random number generator seed: 2833754129
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_check_values, random number generator seed: 2922096068
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3861283634
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 3502761923
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 2628956967
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test p3_main, random number generator seed: 490831169
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ice_supersat_conservation_bfb, random number generator seed: 1530544871
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nc_conservation_bfb, random number generator seed: 3341573694
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test nr_conservation_bfb, random number generator seed: 2179525536
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test ni_conservation_bfb, random number generator seed: 3660644113
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test prevent_liq_supersaturation_bfb, random number generator seed: 1273297099
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (149423 assertions in 51 test cases)

None
<end of output>
Test time =  12.23 sec
----------------------------------------------------------
Test Passed.
"p3_tests_ut_np1_omp13" end time: Oct 25 17:24 MDT
"p3_tests_ut_np1_omp13" time elapsed: 00:00:12
----------------------------------------------------------

75/95 Testing: shoc_tests_ut_np1_omp12
75/95 Test: shoc_tests_ut_np1_omp12
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=12 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp12" start time: Oct 25 17:24 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 12

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2492272543
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 3963123923
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1981207790
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 293244444
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 3728482676
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 4182976853
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 1077994046
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 648504438
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 620381050
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 947432721
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 4046791854
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 3019139011
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 915283006
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 504914876
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 2852192448
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 2324837692
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 220813145
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 788819424
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 4181436592
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 3805386975
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 4038998689
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 1254980880
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 4117408981
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2025810533
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 2314501856
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 1457843747
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 1167484250
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 3358401200
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 2885292666
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 3980883424
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3565009745
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 3533094457
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 790267484
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 1864431201
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 649468155
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 3013670632
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 2381198535
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 2631486888
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 2028880111
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2650662004
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.30 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp12" end time: Oct 25 17:24 MDT
"shoc_tests_ut_np1_omp12" time elapsed: 00:00:06
----------------------------------------------------------

76/95 Testing: shoc_tests_ut_np1_omp13
76/95 Test: shoc_tests_ut_np1_omp13
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=13 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp13" start time: Oct 25 17:24 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40,41 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 13

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 382039545
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 596852314
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 1704362789
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 928105813
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 4279327280
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 2539770880
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 3001195726
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 3556474455
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 105155130
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 1260998021
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 2394164993
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 1559325174
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 3623152771
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 3624046206
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 3074013111
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 3399722636
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 2256956932
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 2027687075
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 2129796646
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 2671124094
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 3562434569
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 119969304
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 1904812245
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 493936984
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 3338444348
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 2946511724
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 412508814
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 2159204222
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 1309388083
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 1983527181
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 2537880327
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 4059829601
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2321164995
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 3739409937
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 348490988
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1866681123
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 3673037253
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 1925459110
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 2468342545
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 3040068333
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   6.01 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp13" end time: Oct 25 17:24 MDT
"shoc_tests_ut_np1_omp13" time elapsed: 00:00:06
----------------------------------------------------------

77/95 Testing: shoc_tests_ut_np1_omp14
77/95 Test: shoc_tests_ut_np1_omp14
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=14 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp14" start time: Oct 25 17:24 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,26,27,28,29,3,30,34,35,40,41,9 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 14


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 14

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2652239270
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 4068113876
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 4097745757
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 3438461200
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 543481395
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1353827316
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 3830542385
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 2268696297
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 4114545912
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 889819765
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 3122867727
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 100055590
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 1740499902
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 3365492715
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 3741984615
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 1072324510
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 2525602663
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 3170255414
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 1987901008
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 1066682207
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 3598848514
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 1815950976
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 3571256164
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2069246458
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 3136619677
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 2850321245
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 299291767
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 2495389119
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 2685763466
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 3188089124
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 3838608143
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 1053485550
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 2367334152
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 3134278969
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 3413991525
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1304116555
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 3104649080
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 3726240493
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 1768728060
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 4212426821
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   5.39 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp14" end time: Oct 25 17:24 MDT
"shoc_tests_ut_np1_omp14" time elapsed: 00:00:05
----------------------------------------------------------

95/95 Testing: shoc_cld_p3_rrtmgp_ut_np1_omp1
95/95 Test: shoc_cld_p3_rrtmgp_ut_np1_omp1
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=1 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_cld_p3_rrtmgp"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/coupled/shoc_cld_p3_rrtmgp
"shoc_cld_p3_rrtmgp_ut_np1_omp1" start time: Oct 25 17:23 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_cld_p3_rrtmgp
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 25 ./shoc_cld_p3_rrtmgp 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/tests/coupled/shoc_cld_p3_rrtmgp
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 1

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
Create Pool
Start time stepping loop...       [  0%]
  - Iteration   1 completed       [ 12%]
  - Iteration   2 completed       [ 25%]
  - Iteration   3 completed       [ 37%]
  - Iteration   4 completed       [ 50%]
  - Iteration   5 completed       [ 62%]
  - Iteration   6 completed       [ 75%]
  - Iteration   7 completed       [ 87%]
  - Iteration   8 completed       [100%]
Memory high water mark: 424.971 MB
Destroy Pool
[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (2 assertions in 1 test case)

None
<end of output>
Test time = 522.31 sec
----------------------------------------------------------
Test Passed.
"shoc_cld_p3_rrtmgp_ut_np1_omp1" end time: Oct 25 17:31 MDT
"shoc_cld_p3_rrtmgp_ut_np1_omp1" time elapsed: 00:08:42
----------------------------------------------------------

78/95 Testing: shoc_tests_ut_np1_omp15
78/95 Test: shoc_tests_ut_np1_omp15
Command: "/usr/bin/sh" "-c" "mpiexec --map-by ppr:1:node:pe=15 --bind-to core /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/bin/test-launcher -e ./shoc_tests"
Directory: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
"shoc_tests_ut_np1_omp15" start time: Oct 25 17:31 MDT
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
WARNING: a request was made to bind a process. While the system
supports binding the process itself, at least one node does NOT
support binding memory to the process location.

  Node:  blake

Open MPI uses the "hwloc" library to perform process and memory
binding. This error message means that hwloc has indicated that
processor binding support is not available on this machine.

On OS X, processor and memory binding is not available at all (i.e.,
the OS does not expose this functionality).

On Linux, lack of the functionality can mean that you are on a
platform where processor and memory affinity is not supported in Linux
itself, or that hwloc was built without NUMA and/or processor affinity
support. When building hwloc (which, depending on your Open MPI
installation, may be embedded in Open MPI itself), it is important to
have the libnuma header and library files available. Different linux
distributions package these files under different names; look for
packages with the word "numa" in them. You may also need a developer
version of the package (e.g., with "dev" or "devel" in the name) to
obtain the relevant header files.

If you are getting this message on a non-OS X, non-Linux platform,
then hwloc does not support processor / memory affinity on this
platform. If the OS/platform does actually support processor / memory
affinity, then you should contact the hwloc maintainers:
https://github.com/open-mpi/hwloc.

This is a warning only; your job will continue, though performance may
be degraded.
--------------------------------------------------------------------------
execname: ./shoc_tests
RUN: OMP_PROC_BIND=spread OMP_PLACES=threads taskset -c 21,22,23,25,26,27,28,29,3,30,34,35,40,41,9 ./shoc_tests 
FROM: /home/asdonah/sandbox_1/scream/components/scream/ctest-build/full_debug/src/physics/shoc/tests
 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 15


-------- EKAT CONFIGS --------

 ExecSpace name: OpenMP
 ExecSpace initialized: yes
 active avx set: -AVX512F-AVX2-AVX
 compiler id: Intel
 default FPE mask: 0 (NONE) 
 #host threads: 15

-------- SCREAM CONFIGS --------

 sizeof(Real) = 8
 default pack size = 16
-------------------------------

Starting catch session on rank 0 out of 1
 For test shoc_grid_bfb, random number generator seed: 2254534231
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_obklen_length_bfb, random number generator seed: 463157939
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_comp_tmpi_bfb, random number generator seed: 2011621122
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_imp_dp_inverse_bfb, random number generator seed: 1504330167
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_vertflux_bfb, random number generator seed: 1076342800
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_varorcovar_bfb, random number generator seed: 1841867017
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_fixer_bfb, random number generator seed: 478483384
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_host_dse_bfb, random number generator seed: 2353588008
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_energy_integrals_bfb, random number generator seed: 2272470861
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_length_bfb, random number generator seed: 3225123489
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_brunt_length_bfb, random number generator seed: 359932190
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_l_inf_length_bfb, random number generator seed: 2418324534
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_length_bfb, random number generator seed: 3205706407
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_mix_length_bfb, random number generator seed: 2691184534
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_clip_third_moms_bfb, random number generator seed: 1472824056
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_bfb, random number generator seed: 2437036247
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_check_tke_bfb, random number generator seed: 3559726666
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_column_stab_bfb, random number generator seed: 4123523963
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_shr_prod_bfb, random number generator seed: 2457778110
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_isotropic_ts_bfb, random number generator seed: 3075630522
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_adv_sgs_tke_bfb, random number generator seed: 1227780760
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_tke_eddy_diffusivities_bfb, random number generator seed: 3668883145
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_linear_interp_bfb, random number generator seed: 2539395541
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_diag_third_bfb, random number generator seed: 2560479959
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_comp_diag_third_bfb, random number generator seed: 1091479252
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_assumed_pdf_bfb, random number generator seed: 2411874680
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test second_mom_uby_bfb, random number generator seed: 729502132
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_init_pot_bfb, random number generator seed: 1836586039
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_lbycond_bfb, random number generator seed: 3316888106
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_moments_bfb, random number generator seed: 2638957009
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test diag_second_shoc_moments_bfb, random number generator seed: 4136775707
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_pblintd_cldcheck_bfb, random number generator seed: 2181278725
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test compute_shoc_vapor_bfb, random number generator seed: 515265132
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test update_prognostics_implicit_bfb, random number generator seed: 1848685287
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test shoc_main_bfb, random number generator seed: 3873168795
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_height_bfb, random number generator seed: 1560770348
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test vd_shoc_solve_bfb, random number generator seed: 921567121
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_surf_temp_bfb, random number generator seed: 2304528419
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_check_pblh_bfb, random number generator seed: 3641061512
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

 For test pblintd_bfb, random number generator seed: 2798533293
    Note: catch rng seed was 0 (default). We interpret that as a request to pick a random seed.
    To reproduce a previous run, use --rng-seed N to provide the rng seed.

[1;31m[0m[1;33m[0m[1;32m===============================================================================[0m
[1;32mAll tests passed[0m (879353 assertions in 135 test cases)

None
<end of output>
Test time =   5.47 sec
----------------------------------------------------------
Test Passed.
"shoc_tests_ut_np1_omp15" end time: Oct 25 17:31 MDT
"shoc_tests_ut_np1_omp15" time elapsed: 00:00:05
----------------------------------------------------------

