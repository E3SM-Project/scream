<?xml version="1.0"?>

<!--

The file that defines all parameter input files for SCREAM. This file
will be processed by SCREAM's buildnml script and produces the
$case/namelist_scream.xml which is the fully resolved/processed
info from this file. We highly recommend users use atmchange for
tweaking their $case/namelist_scream.xml file. Direct edits will
be lost if SCREAM_HACK_XML is not enabled.

-->

<namelist_defaults>

  <!--
    The following block defines convenience selectors. Case settings
    can be used as selectors, but they are often not covenient due to
    long names or having to process their values through regular expressions
    to get the subpiece you are interested in. The convenience selectors
    allow you to express this logic and capture it with a short name.

    The following attributes are how one defines a selector
      name     : The name of the selector
      case_env : The case value (thing you can xmlquery)
      regex    : OPTIONAL, how to pick out the piece of the value you are interested in
                 By default, the entire value is grabbed. If the regex does not match
                 the case value, then the selector will evaluate to False.

    Example using the nlev selector
      <partmethod nlev="128">42</partmethod>
      <partmethod nlev="72">420</partmethod>

    Selector info will not be duplicated in the processed $case/namelist_scream.xml file.
  -->
  <case_selectors>
    <selector name="hgrid" case_env="ATM_GRID"/>
    <selector name="dyn" case_env="CAM_TARGET"/>
    <selector name="nlev" case_env="SCREAM_CMAKE_OPTIONS" regex=".*SCREAM_NUM_VERTICAL_LEV ([0-9]+).*"/>
  </case_selectors>

  <!--
    On top of the selectors above, the following selectors allow to select values for atm params depending
    on other atm params.
    DISCLAIMER: there MAY be selectors that create cirular dependencies. That's not the intended usage,
    so if it happens, please, rearrange things so that information flows in one direction only.
    These selectors differ from the previous ones, in that they depend on atm configuration options
    contained in this file. So, while running 'atmchange' won't change whether a "selector" applies,
    it MAY change whether an atm_selector applies or not. This is how they can be used:
      - check if an atm proc with given name exists in the atm (regardless of where in the atm sequence)
          <blah atm_param="p3" proc_active="true"> ... </blah>
      - check if a param exists (the param name MUST be unique)
          <blah atm_param="p3::some_entry" exists="false"> ... </blah>
      - check if a param exists AND has a specific value
          <blah atm_param="p3::some_entry" matches="target"> ... </blah>
      - check if a param exists AND is an array AND it contains a specific value
          <blah param="p3::some_entry" contains="some_val"> ... </blah>
  <atm_selectors>
    <atm_selector check="proc_active"/>
    <atm_selector check="exists"/>
    <atm_selector check="matches"/>
    <atm_selector check="contains"/>
  </atm_selectors>

  -->

  <!-- List of scream grids for a given compset. I/O can only happen on these grids -->

  <!-- Help buildnml by listing files to generate,
    specifying which sections of the xml go in each file -->
  <generated_files>
    <file name="data/namelist.nl" format="nml">
      <sections>ctl_nl</sections>
    </file>
    <file name="data/scream_input.yaml" format="yaml">
      <sections>driver_options,iop_options,atmosphere_processes,grids_manager,initial_conditions,Scorpio,e3sm_parameters</sections>
    </file>
  </generated_files>

  <!--
      The following blocks define the input files for the model.
      There are some rules that must be followed.

      Lingo:
        Outer element: An XML element that is not intended to be an input paramter,
                       it is only for grouping/namespacing the elements within it
        Parameter element: An XML element representing an individual input parameter.
                           This element should not have child elements. It should have element text
                           representing the desired value. These elements can have
                           one or more selectors. We call a parameter element "matched"
                           if it either has no selectors or all its selectors are True.
        Parameter: A named input value. It can have multiple parameter elements if
                   it needs to have different values/types based on case settings.
        Selector: An XML attribute that checks a property of the case. See the documentation
                  above the <selectors> element above for more details.
        Metadata: An XML attribute that represents metadata for an input parameter

      Rules:
        1) Parameters can have any number of parameter elements, each with their own
           set of selectors. A parameter element with no selectors, which means it controls the default param value, must
           come before parameter elements with selectors. If multiple parameter elements
           are matched, then the match the occurs last takes precendence.

        2) The first matched parameter element encountered for a parameter will define the default metadata
           for that parameter. All subsequent parameter elements will assume the same
           metadata as the first unless an explicit override occurs.
           User changes to the case XML file must be compatible with the metadata.

        3) For a parameter whose elements all have selectors, if none of the selectors
           are matched, then the parameter will be omitted from the case XML
           file ($case/namelist_scream.xml).

        4) Parameter types will be inferred. You can override the inferred type
           via the 'type' metadata attribute. Types are:
             logical: will be inferred from any case of true/false
             integer: will be inferred from any sequence of 0-9
             real   : will be inferred from any numeric expression with a decimal point or scientific notation
             file   : A string that denotes a file path that CIME should download
             string : everything else

             array(one of the above): An array of one of the above types. The array type will be inferred
                                      if the value is of the form (v1, v2, ...) or [v1, v2, ...]

        5) A parameter can be set to any value of the correct type unless
           the 'valid_values' metadata attribute is set. If desired, valid_values
           should be set up as a comma-separated list of values, e.g. 'valid_values="1,2,3"'
           TODO support numeric checks (<, >, ...)??

        6) You can inline case values into parameter values via this syntax, e.g.:
           <init_file>scream_init_${ATM_GRID}.nc</init_file>. If ATM_GRID="ne4np4",
           this would result in parameter init_file' having the value 'scream_init_ne4np4.nc'

        7) Any parameter value with a comma will be assumed to be a list.
           TODO allow this behavior to be overridden?

        8) Every value in a list should be of the same type

        9) All local changes made to $case/namelist_scream.xml must conform
           to the structure and metadata derived from this file.

       10) Outer elements can "inherit" from other outer elements. This allows to declare
           basic/common defaults for a whole group of lists, wihtout the need of
           repeating the common entries inside each list. This is particularly useful
           for the atmosphere processes section(s).

       11) The attribute 'locked="true"' is to be used for entries that cannot be changed
           via atmchange (see scripts/atmchange). If an element is locked, then all children
           will be locked as well.

       12) The attribute 'constraints' allows to specify constraints on values. Valid constraints
           are lt, le, ne, gt, ge, and mod. Except the latter (which has slightly different syntax,
           see below), the syntax is "$op value", to enforce '$param $op value'.
           Multiple constrained are separated by ';'. Examples:
             - constraints="ge 0; ne 4" means the value V must satisfy V>=0 && V!=4.
             - constraints="ge 0; lt 4" means the value V must satisfy V>=0 && V<4.
             - constraints="mod 2 eq 0" means the value V must be a multiple of 2.
  -->

  <atmosphere_processes_defaults>

    <!--
      List of atm procs. You can form processes groups by using parentheses,
      or by giving the group a name, and adding a subsection that inherit
      from atm_proc_group. atm_procs_list itself *must* represent a group,
      so it must be of the form (a,b,...).
      NOTE: *CANNOT* be changed.
    -->
    <atm_procs_list type="array(string)">spa</atm_procs_list>

    <!-- Basic options for each atm process -->
    <atm_proc_base>
      <number_of_subcycles constraints="gt 0" doc="how many times to subcycle this atm process">1</number_of_subcycles>
      <enable_precondition_checks type="logical">true</enable_precondition_checks>
      <enable_postcondition_checks type="logical">true</enable_postcondition_checks>
      <repair_log_level type="string" valid_values="trace,debug,info,warn">trace</repair_log_level>
      <!-- Run internal checks on code correctness.
           <= 0: off; >= 1: global hashes over state -->
      <internal_diagnostics_level type="integer">0</internal_diagnostics_level>
      <compute_tendencies
        type="array(string)"
        doc="list of computed fields for which this process will back out tendencies"
        />
    </atm_proc_base>

    <!-- Basic options for each atm process group -->
    <atm_proc_group inherit="atm_proc_base">
      <atm_procs_list type="array(string)" doc="List of atm processes in this atm process group"/>
      <Type>Group</Type>
      <schedule_type valid_values="Sequential">Sequential</schedule_type>
    </atm_proc_group>

    <!-- Simple Prescribed Aerosols (SPA) -->
    <spa inherit="atm_proc_base">
      <spa_remap_file type="file" doc="File containing mapping data from the grid of spa_data_file to the model grid. Unused if the grid is the same."/>
      <spa_remap_file hgrid="ne120np4">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30np4_to_ne120np4_mono_20220502.nc</spa_remap_file>
      <spa_remap_file hgrid="ne4np4.pg2">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30pg2_to_ne120pg2_20231201.nc</spa_remap_file>
      <spa_remap_file hgrid="ne120np4.pg2">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30pg2_to_ne120pg2_20231201.nc</spa_remap_file>
      <spa_remap_file hgrid="ne256np4.pg2">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30pg2_to_ne256pg2_20231201.nc</spa_remap_file>
      <spa_remap_file hgrid="ne512np4.pg2">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30pg2_to_ne512pg2_20231201.nc</spa_remap_file>
      <spa_remap_file hgrid="ne1024np4.pg2">${DIN_LOC_ROOT}/atm/scream/maps/map_ne30pg2_to_ne1024pg2_20231201.nc</spa_remap_file>
      <spa_remap_file COMPSET=".*DP-EAMxx"/>

      <spa_data_file type="file" doc="File containing aerosol data. Must be on same grid as the atm, or a coarser one"/>
      <spa_data_file hgrid="ne.*np4">${DIN_LOC_ROOT}/atm/scream/init/spa_file_unified_and_complete_ne30_20220428.nc</spa_data_file>
      <spa_data_file hgrid="ne.*np4.pg2">${DIN_LOC_ROOT}/atm/scream/init/spa_file_unified_and_complete_ne30pg2_20240111.nc</spa_data_file>
      <spa_data_file hgrid="ne4np4">${DIN_LOC_ROOT}/atm/scream/init/spa_file_unified_and_complete_ne4_20220428.nc</spa_data_file>
      <spa_data_file hgrid="ne4np4.pg2">${DIN_LOC_ROOT}/atm/scream/init/spa_file_unified_and_complete_ne4pg2_20231222.nc</spa_data_file>
    </spa>

  </atmosphere_processes_defaults>

  <!-- Grids manager specs -->
  <grids_manager>
  </grids_manager>

  <!-- List of nc files for loading inputs on specified grids -->
  <initial_conditions>
    <Filename type="file">UNSET</Filename>
    <Filename hgrid="ne4np4">${DIN_LOC_ROOT}/atm/scream/init/screami_ne4np4L72_20220823.nc</Filename>
    <Filename hgrid="ne30np4" nlev="72">${DIN_LOC_ROOT}/atm/scream/init/screami_ne30np4L72_20220823.nc</Filename>
    <Filename hgrid="ne30np4" nlev="128">${DIN_LOC_ROOT}/atm/scream/init/screami_ne30np4L128_20221004.nc</Filename>
    <Filename hgrid="ne120np4" nlev="72">${DIN_LOC_ROOT}/atm/scream/init/screami_ne120np4L72_20220823.nc</Filename>
    <Filename hgrid="ne120np4" nlev="128">${DIN_LOC_ROOT}/atm/scream/init/screami_ne120np4L128_20230215.nc</Filename>
    <Filename hgrid="ne256np4">${DIN_LOC_ROOT}/atm/scream/init/screami_ne256np4L128_ifs-20200120_20220914.nc</Filename>
    <Filename hgrid="ne512np4">${DIN_LOC_ROOT}/atm/scream/init/screami_ne512np4L128_20220823.nc</Filename>
    <Filename hgrid="ne1024np4">${DIN_LOC_ROOT}/atm/scream/init/screami_ne1024np4L128_era5-20131001-topoadj-16x_20220914.nc</Filename>
    <Filename hgrid="ne1024np4" COMPSET=".*SCREAM%DYAMOND-2_ELM">${DIN_LOC_ROOT}/atm/scream/init/screami_ne1024np4L128_ifs-20200120-topoadjx6t_20221011.nc</Filename>
    <Filename hgrid="ne4np4" COMPSET=".*SCREAM%AQUA.*">${DIN_LOC_ROOT}/atm/scream/init/screami_aquaplanet_ne4np4L72_20220823.nc</Filename>
    <Filename hgrid="ne0np4_conus_x4v1_lowcon" nlev="72">${DIN_LOC_ROOT}/atm/scream/init/screami_conusx4v1np4L72-topo12x_013023.nc</Filename>

    <!-- List of default topography files on specific grids -->
    <topography_filename type="file">UNSET</topography_filename>
    <!-- Rough topography available for ne30, ne120, ne256, ne512, and ne1024 -->
    <topography_filename hgrid="ne30np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne30np4pg2_x6t-SGH.c20210614.nc</topography_filename>
    <topography_filename hgrid="ne120np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne120np4pg2_x6t_20230404.nc</topography_filename>
    <topography_filename hgrid="ne256np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne256np4pg2_x6t-SGH.c20210614.nc</topography_filename>
    <topography_filename hgrid="ne512np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne512np4pg2_x6t_20230404.nc</topography_filename>
    <topography_filename hgrid="ne1024np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne1024np4pg2_x6t-SGH.c20210614.nc</topography_filename>
    <!-- Currently no rough topography for ne4. Use smooth topography file -->
    <topography_filename hgrid="ne4np4">${DIN_LOC_ROOT}/atm/cam/topo/USGS-gtopo30_ne4np4pg2_16x_converted.c20200527.nc</topography_filename>
    <!-- Special case with non x6t or 16x topography file -->
    <topography_filename hgrid="ne0np4_conus_x4v1_lowcon">${DIN_LOC_ROOT}/atm/cam/topo/USGS_conusx4v1pg2_12x_consistentSGH_20200609.nc</topography_filename>
    <!-- For aquaplanet run, unset the topography_filename and set phis=0 -->
    <topography_filename COMPSET=".*SCREAM%AQUA.*">UNSET</topography_filename>

  </initial_conditions>

  <!-- List of yaml files containing I/O output specs -->
  <Scorpio>
  </Scorpio>

  <!-- driver_options options for scream -->
  <driver_options>
  </driver_options>

  <!-- E3SM Simulation Settings -->
  <e3sm_parameters>
    <e3sm_casename>${CASE}</e3sm_casename>
  </e3sm_parameters>

  <!-- Default settings for DP-EAMxx -->
  <iop_options>
  </iop_options>

  <!-- Homme control namelist -->
  <ctl_nl>
  </ctl_nl>

</namelist_defaults>
